name: Docker

on:
    workflow_call:
#        inputs:
#            APP_NAME:
#                type: string
#                required: true
#            APP_VERSION:
#                type: string
#                required: true
#            BUILD:
#                type: boolean
#                required: false
#            DOCKERFILE:
#                description: "Dockerfile path relative to context"
#                type: string
#                required: false
#                default: "./tools/Dockerfile"
#            DOCKER_REGISTRY:
#                description: "Docker registry to push image"
#                type: string
#                required: false
#                default: "docker-registry.trendagent.ru:5000"
#        outputs:
#            IMAGE:
#                description: "Docker image name"
#                value: ${{ jobs.vars.outputs.IMAGE }}
#        secrets:
#            DOCKER_REGISTRY_USER:
#                required: true
#            DOCKER_REGISTRY_PASSWORD:
#                required: true
#            GPT_TOKEN:
#                required: true

jobs:
    variables:
        name: Prepare variables
        runs-on: ubuntu-latest
#        outputs:
#            IMAGE: ${{ steps.image.outputs.NAME }}
        steps:
            -   shell: bash
                run: |
                    echo HI
#                    echo ${{ inputs.DOCKER_REGISTRY }}
#                    echo ${{ inputs.APP_NAME }}
#                    echo ${{ inputs.APP_VERSION }}
#                    echo ${{ github.sha }}
#            -   id: image
#                run: echo "::set-output name=NAME::${{ inputs.DOCKER_REGISTRY }}/${{ inputs.APP_NAME }}:${{ inputs.APP_VERSION }}_${{ github.sha }}"
#            -   shell: bash
#                run: |
#                    echo ${{ steps.image.outputs.NAME }}

#    build:
#        name: Build
#        runs-on: ubuntu-latest
#        needs: vars
#        steps:
#            -   name: Checkout repository
#                uses: actions/checkout@v2
#
#            -   name: Set up Docker Buildx
#                uses: docker/setup-buildx-action@v1
#
#            # Cache
#            -   name: Cache Docker layers
#                uses: actions/cache@v2
#                with:
#                    path: /tmp/.buildx-cache
#                    key: ${{ runner.os }}-buildx-${{ github.sha }}
#                    restore-keys: |
#                        ${{ runner.os }}-buildx-
#
#            # Login against a Docker registry except on PR
#            # https://github.com/docker/login-action
#            -   name: Log into Docker registry
#                if: ${{ github.event_name != 'pull_request' }}
#                uses: docker/login-action@v1
#                with:
#                    registry: ${{ inputs.DOCKER_REGISTRY }}
#                    username: ${{ secrets.DOCKER_REGISTRY_USER }}
#                    password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
#
#            # Build and push Docker image with Buildx (don't push on PR)
#            # https://github.com/docker/build-push-action
#            -   name: Build and push
#                uses: docker/build-push-action@v2
#                with:
#                    context: .
#                    file: ${{ inputs.DOCKERFILE }}
#                    push: ${{ github.event_name != 'pull_request' }}
#                    tags: |
#                        ${{ inputs.DOCKER_REGISTRY }}/${{ inputs.APP_NAME }}:${{ github.sha }}
#                        ${{ needs.vars.outputs.IMAGE }}
#                    cache-from: type=local,src=/tmp/.buildx-cache
#                    cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
#                    build-args: |
#                        "NPM_TOKEN=${{ secrets.GPT_TOKEN }}"
#
#            # Temp fix
#            # https://github.com/docker/build-push-action/issues/252
#            # https://github.com/moby/buildkit/issues/1896
#            -   name: Move cache
#                run: |
#                    rm -rf /tmp/.buildx-cache
#                    mv /tmp/.buildx-cache-new /tmp/.buildx-cache
