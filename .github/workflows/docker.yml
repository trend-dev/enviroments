name: Docker

on:
  workflow_call:
    inputs:
      APP_NAME:
        type: string
        required: true
      APP_VERSION:
        type: string
        required: true
      BUILD:
        description: "Actual boolean flag to make build docker image, BUT BEWARE IT IS PASSING AS STRING"
        type: string
        required: false
      DOCKERFILE:
        description: "Dockerfile path relative to context"
        type: string
        required: false
        default: "./tools/Dockerfile"
      DOCKER_REGISTRY:
        description: "Docker registry to push image"
        type: string
        required: false
        default: "docker-registry.trendagent.ru:5000"
      TEST:
        description: "Run unit tests"
        type: string
        required: false
    outputs:
      IMAGE:
        description: "Docker image name"
        value: ${{ jobs.variables.outputs.IMAGE }}
    secrets:
      DOCKER_REGISTRY_USER:
        required: true
      DOCKER_REGISTRY_PASSWORD:
        required: true
      GPT_TOKEN:
        required: true

jobs:
  variables:
    name: Prepare variables
    runs-on: [ self-hosted, docker-runner ]
    outputs:
      IMAGE: ${{ steps.image.outputs.NAME }}
    steps:
      - id: image
        run: echo "NAME=${{ inputs.DOCKER_REGISTRY }}/${{ inputs.APP_NAME }}:${{ inputs.APP_VERSION }}-${{ github.sha }}" >> $GITHUB_OUTPUT
      - name: name of image
        run: echo ${{ steps.image.outputs.NAME }}

  build:
    if: ${{ (inputs.BUILD == 'true') && (inputs.TEST == 'false') }}
    name: Build & push docker image
    runs-on: [ self-hosted, docker-runner ]
    needs: variables
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Context for Buildx
        run: docker context create builders

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          endpoint: builders

      # Cache
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into Docker registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ inputs.DOCKERFILE }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ inputs.DOCKER_REGISTRY }}/${{ inputs.APP_NAME }}:${{ github.sha }}
            ${{ needs.variables.outputs.IMAGE }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            "NPM_TOKEN=${{ secrets.GPT_TOKEN }}"

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build_and_test:
    if: ${{ (inputs.BUILD == 'true') && (inputs.TEST == 'true') }}
    name: Test & build & push docker image
    runs-on: [ self-hosted, docker-runner ]
    needs: variables
    steps:
      - name: Setup node
        id: node_build
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@trend-dev'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPT_TOKEN }}
          CI: true

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: run tests
        run: |
#          npm set //npm.pkg.github.com/:_authToken "${{ secrets.GPT_TOKEN }}"
          npm ci
          npm run test

      - name: Set up Docker Context for Buildx
        run: docker context create builders

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          endpoint: builders

      # Cache
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into Docker registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ inputs.DOCKERFILE }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ inputs.DOCKER_REGISTRY }}/${{ inputs.APP_NAME }}:${{ github.sha }}
            ${{ needs.variables.outputs.IMAGE }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            "NPM_TOKEN=${{ secrets.GPT_TOKEN }}"

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache